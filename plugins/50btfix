#!/bin/bash
#
# This is an sdm plugin for: btfix.  This stops the blutooth.service from loading the sap driver
#
# The plugin is called three times: for Phase 0, Phase 1, and post-install.
# $1 is the phase: "0", "1", or "post-install"
# $2 is the argument list: arg1=val1|arg2=val2|arg3=val3| ...
#
# Main code for the Plugin
#
source $SDMPT/etc/sdm/sdm-readparams
#
DEBUG=${custom1:-0}
phase=$1
pfx="$(basename $0)"     #For messages
args="$2"
#
plugin_getargs $pfx "$args" "|assetDir|"
[ -f $SDMPT/etc/sdm/assets/common.sh ] || cp -va $assetDir/common.sh $SDMPT/etc/sdm/assets/common.sh
source $SDMPT/etc/sdm/assets/common.sh
fDebugLog 3 "Sucessfully sourced $SDMPT/etc/sdm/assets/common.sh" wait
#
if [ "$phase" == "0" ]
then
    #
    # In Phase 0 all references to directories in the image must be preceded by $SDMPT
    #
    fDebugLog 0  "* Plugin $pfx: Start Phase 0" wait
    fDebugLog 2 "$(plugin_printkeys)"
    #
    fDebugLog 1 "* Plugin $pfx: Creating directory bluetooth.service.d/" 
    mkdir -pv $SDMPT/etc/systemd/system/bluetooth.service.d/
    #
    fDebugLog 1 "* Plugin $pfx: Copying $assetDir/override.conf > $SDMPT/etc/systemd/system/bluetooth.service.d/override.conf"
    cp -av --reflink=auto $assetDir/override.conf $SDMPT/etc/systemd/system/bluetooth.service.d/override.conf
    #
    fDebugLog 0  "* Plugin $pfx: Complete Phase 0" wait
    #
elif [ "$phase" == "1" ]
then
    #
    # Phase 1 (in nspawn)
    #
    fDebugLog 0  "* Plugin $pfx: Start Phase 1 (in nspawn)"
    fDebugLog 2 "$(plugin_printkeys)"
    #
    fDebugLog 1 "* Plugin $pfx: Nothing to do"
    #
    fDebugLog 0  "* Plugin $pfx: Complete Phase 1" wait
    #
else
    #
    # Plugin Post-install edits
    #
    fDebugLog 0  "* Plugin $pfx: Start Phase post-install"
    fDebugLog 2 "$(plugin_printkeys)"
    #
    fDebugLog 1 "* Plugin $pfx: Nothing to do"
    #
    #logfreespace "at end of $pfx Custom Phase post-install"
    fDebugLog 0  "* Plugin $pfx: Complete Phase post-install" wait
    #
fi
