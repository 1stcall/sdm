#!/bin/bash
#
# This is an sdm plugin for: extractfs
#
# The plugin is called three times: for Phase 0, Phase 1, and post-install.
#

function loadparams() {
    source $SDMPT/etc/sdm/sdm-readparams
}

function extmountimg() {
    # Mount IMG and rsync as requested
    savesdmpt=$SDMPT
    declare -x SDMPT=$(makemtpt)
    domount "$img"
    echo "* IMG '$img' mounted on $SDMPT"
}

# $1 is the phase: "0", "1", or "post-install"
# $2 is the argument list: arg1=val1|arg2=val2|arg3=val3| ...
#
# Main code for the Plugin
#
phase=$1
pfx="$(basename $0)"     #For messages
args="$2"
loadparams
vldargs="|bootfs|rootfs|img|verbose|" #"|list|of|valid|args|"
rqdargs="|img|"                   # |list|of|required|args|or|nullstring|
assetdir="$SDMPT/etc/sdm/assets/$pfx"

if [ "$phase" == "0" ]
then
    #
    # In Phase 0 all references to directories in the image must be preceded by $SDMPT
    #
    logtoboth "* Plugin $pfx: Start Phase 0"
    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs" || exit
    #
    # Print the keys found (example usage). plugin_getargs returns the list of found keys in $foundkeys
    #
    plugin_printkeys
    [ -f $img ] || { logtoboth "? Plugin $pfx: IMG '$img' not found" ; exit 1 ; }
    #
    # Ensure we're running on the live system: --runonly plugins --plugin extractfs
    #
    if ! [[ "$SDMNSPAWN" =~ "Live" ]]
    then
	logtoboth "? Plugin $pfx: Must be run on live system with --runonly plugins [--oklive] --plugin extractfs"
	exit 1
    fi
    [ -d $bootfs ] || { logtoboth "? Plugin $pfx: bootfs target '$bootfs' must be a directory" ; exit 1 ; }
    rootfs=""
    [ -d $rootfs ] || { logtoboth "? Plugin $pfx: rootfs target '$rootfs' must be a directory" ; exit 1 ; }
    [ -v verbose ] && logf="$verbose" || logf=""
    extmountimg
    if [ "$bootfs" != "" ]
    then
	logtoboth "> Plugin $pfx: Copy bootfs from $SDMPT/boot to $bootfs"
	rsync -a $logf $SDMPT/boot/ $bootfs
    fi
    if [ "$rootfs" != "" ]
    then
	logtoboth "> Plugin $pfx: Copy rootfs from $SDMPT/boot to $rootfs"
	rsync -a $logf $SDMPT/ $rootfs
    fi
    docleanup
    #ismounted $SDMPT/boot && umount -v $SDMPT/boot
    #ismounted $SDMPT && umount -v $SDMPT
    #[ "$loopdev" != "" ] && losetup -d $loopdev && loopdev=""
    #declare -x SDMPT="$savesdmpt"
    exit
    logtoboth "* Plugin $pfx: Complete Phase 0"
fi
#elif [ "$phase" == "1" ]
#then
#    #
#    # Phase 1 (in nspawn)
#    #
#    logtoboth "* Plugin $pfx: Start Phase 1"
#    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs"
#    #logfreespace "at start of Plugin $pfx Phase 1"
#    #
#    # INSERT your Plugin Phase 1 customization stuff here
#    # In Phase 1 all references to directories in the image can be direct
#    #
#    #logfreespace "at end of $pfx Phase 1"
#    logtoboth "* Plugin $pfx: Complete Phase 1"
#else
#    #
#    # Plugin Post-install edits
#    #
#    logtoboth "* Plugin $pfx: Start Phase post-install"
#    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs"
#    #logfreespace "at start of Plugin $pfx Phase post-install"
#    #
#    # INSERT Your Plugin's post-install code here
#    # In Phase post-install all references to directories in the image can be direct
#    #
#    #logfreespace "at end of $pfx Custom Phase post-install"
#    logtoboth "* Plugin $pfx: Complete Phase post-install"
#fi
