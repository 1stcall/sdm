#!/bin/bash
#
# This is an sdm plugin for: network
#
# The plugin is called three times: for Phase 0, Phase 1, and post-install.
#

function loadparams() {
    source $SDMPT/etc/sdm/sdm-readparams
}

function getdefnm() {
    #
    # $1 has user-provided $netman
    #
    if [ "$1" != "" ]
    then
	echo "$1"
    else
	[ ${raspiosver} -ge 12 ] && echo "nm" || echo "dhcpcd"
    fi
}

# $1 is the phase: "0", "1", or "post-install"
# $2 is the argument list: arg1=val1|arg2=val2|arg3=val3| ...
#
# Main code for the Plugin
#
phase=$1
pfx="$(basename $0)"     #For messages
args="$2"
loadparams

vldargs="|netman|dhcpcdwait|dhcpcdappend|wpa|wifissid|wifipassword|wificountry|noipv6|nmconf|nmconn|"
rqdargs=""

if [ "$phase" == "0" ]
then
    #
    # In Phase 0 all references to directories in the image must be preceded by $SDMPT
    #
    #logtoboth "* Plugin $pfx: Start Phase 0"

    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs"
    netman=$(getdefnm "$netman")

    case "${netman}" in
	dhcpcd)
	    if [ "$dhcpcdappend" != "" ]
	    then
		if [ -f $dhcpcdappend ]
		then
		    logtoboth "> Plugin $pfx: Copy dhcpcdappend file '$dhcpcdappend' to /etc/sdm/assets/dhcpcd-append.conf"
		    cp $dhcpcdappend $SDMPT/etc/sdm/assets/dhcpcd-append.conf
		else
		    logtoboth "? Plugin $pfx: dhcpcdappend file '$dhcpcdappend' not found"
		fi
	    fi
	    if [ "$wpa" != "" ]
	    then
		if [ -f $wpa ]
		then
		    logtoboth "> Plugin $pfx: Copy wpa_supplicant config file '$wpa' to /etc/sdm/assets/dhcpcd-wpa"
		    tr -d '\r' < $wpa > $SDMPT/etc/sdm/assets/dhcpcd-wpa
		else
		    logtoboth "? Plugin $pfx: wpa file '$wpa' not found"
		fi
	    fi
	    ;;
	nm|network-manager)
	    for conf in nmconf nmconn
	    do
		if [ "${!conf}" != "" ]
		then
		    IFS="," read -a citems <<< "${!conf}"
		    for c in "${citems[@]}"
		    do
			if [ -f $c ]
			then
			    cbn=$(basename $c)
			    logtoboth "> Plugin $pfx: Copy $conf '$c' to /etc/sdm/assets"
			    cp $c $SDMPT/etc/sdm/assets/$conf-$cbn
			else
			    logtoboth "% Plugin $pfx: $conf file '$c' not found"
			fi
		    done
		fi
	    done
	    ;;
    esac
    
    #logtoboth "* Plugin $pfx: Complete Phase 0"

elif [ "$phase" == "1" ]
then
    #
    # Phase 1 (in nspawn)
    #
    logtoboth "* Plugin $pfx: Start Phase 1"
    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs"
    netman=$(getdefnm "$netman")
    #logfreespace "at start of Plugin $pfx Phase 1"

    #logfreespace "at end of $pfx Phase 1"
    logtoboth "* Plugin $pfx: Complete Phase 1"
else
    #
    # Plugin Post-install edits
    #
    logtoboth "* Plugin $pfx: Start Phase post-install"
    xwificountry="$wificountry"
    plugin_getargs $pfx "$args" "$vldargs" "$rqdargs"
    netman=$(getdefnm "$netman")
    plugin_printkeys
    #logfreespace "at start of Plugin $pfx Phase post-install"

    #
    # Figure out wifi country. command line wpa overrides settings here atm
    [ "$wificountry" == "" ] && wificountry="$xwificountry"
    if [ "$wpaconf" == "" ]
    then
	if [ "$wifissid" == "" -o "$wifipassword" == "" -o "$wificountry" == "" ]
	then
	    if [ "$wpa" != "" ]
	    then
		if [ -f /etc/sdm/assets/dhcpcd-wpa ]
		then
		    logtoboth "> Plugin $pfx: Copy /etc/sdm/assets/dhcpcd-wpa to /etc/wpa-supplicant.conf"
		    cp /etc/sdm/assets/dhcpcd-wpa /etc/wpa_supplicant/wpa_supplicant.conf
		    setfileownmode /etc/wpa_supplicant/wpa_supplicant.conf
		else
		    logtoboth "? Cannot find /etc/sdm/assets/dhcpcd-wpa":
		fi
	    fi
	else
	    logtoboth "> Plugin $pfx: Create /etc/wpa_supplicant/wpa_supplicant.conf"
	    logtoboth "  with SSID: $wifissid Password: $wifipassword WiFi Country: $wificountry"
	    cat > /etc/wpa_supplicant/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
country=$wificountry
update_config=1
ap_scan=1

network={
    priority=10
    ssid="$wifissid"
    psk="$wifipassword"
}
EOF
	fi
    else
	if [ "$wpa" != "" -o "$wifissid" != "" -o "$wifipassword" != "" -o "$wificountry" != "" ]
	then
	    logtoboth "% Plugin $pfx: Command line --wpa overrides plugin settings"
	fi
    fi
    if [ "$wificountry" == "" ]
    then
	if [ -f /etc/wpa_supplicant/wpa_supplicant.conf ]
	then
            IFS="=" read a wificountry <<< $(grep 'country=' /etc/wpa_supplicant/wpa_supplicant.conf)
	fi
    fi
    if [ "$wificountry" != "" ]
    then
	logtoboth "> Plugin $pfx: Set WiFi Country '$wificountry' to be implemented during FirstBoot"
	writeconfig    # Update config to save updated wificountry
    else
	logtoboth "% WiFi Country not found from command line, network plugin, or wpa_supplicant.conf"
    fi
    #
    # If wifissid and wifipassword not provided but a wpa_supplicant.conf exists, find them there
    #
    if [ "$wifissid" == "" ]
    then
	if [ -f /etc/wpa_supplicant/wpa_supplicant.conf ]
	then
	    IFS="=#" read a wifissid junk <<<$(grep 'ssid=' /etc/wpa_supplicant/wpa_supplicant.conf)
	    wifissid=$(stripquotes $wifissid)
	fi
    fi
    if [ "$wifipassword" == "" ]
    then
	if [ -f /etc/wpa_supplicant/wpa_supplicant.conf ]
	then
	    IFS="=#" read a wifipassword junk <<<$(grep 'psk=' /etc/wpa_supplicant/wpa_supplicant.conf)
	    wifipassword=$(stripquotes $wifipassword 1)
	fi
    fi
    case "${netman}" in
	dhcpcd)
	    logtoboth "> Plugin $pfx: Set network management to dhcpcd and disable NetworkManager"
	    [ "$raspiosver" -ge 12 ] && pkg="dhcpcd" || pkg="dhcpcd5"
	    ! ispkginstalled $pkg && doaptrpterror "install --no-install-recommends --yes $pkg" $showapt
	    systemctl disable NetworkManager > /dev/null 2>&1
	    if [ -f /etc/sdm/assets/dhcpcd-append.conf ]
	    then
		logtoboth "> Plugin $pfx: Append /etc/sdm/assets/dhcpcd-append.conf to /etc/dhcpcd.conf"
		cat /etc/sdm/assets/dhcpcd-append.conf >> /etc/dhcpcd.conf
		[ -v noipv6 ] && echo "noipv6" >> /etc/dhcpcd.conf
	    fi
	    #
	    # Set dhcpcd wait if requested
	    #
	    if [ -v dhcpcdwait ]
	    then
		mkdir -p /etc/systemd/system/dhcpcd.service.d/
		# use the same /path/to/dhcpcd that the dhcpcd service is
		dex=$(grep -E "ExecStart=.*/dhcpcd" /lib/systemd/system/dhcpcd.service| head -n 1 -)
		dhcf=${dex##ExecStart=}  #Strip leading ExecStart=
		dhcf=${dhcf%% *}         #Strip everything after the path (switches,etc)
		logtoboth "> Plugin $pfx: Enable dhcpcd [$dhcf] 'wait for network connection'"
		cat > /etc/systemd/system/dhcpcd.service.d/wait.conf << EOF
[Service]
ExecStart=
ExecStart=$dhcf -q -w
EOF
	    fi
	    #
	    # Fix dhcpcd hooks if needed
	    #
	    if [ ! -f /lib/dhcpcd/dhcpcd-hooks/10-wpa_supplicant ]
	    then
		if [ -f /usr/share/dhcpcd/hooks/10-wpa_supplicant ]
		then
		    logtoboth "> Plugin $pfx: Copy /usr/share/dhcpcd/hooks/10-wpa_supplicant to /lib/dhcpcd/dhcpcd-hooks (BUG)"
		    cp -a /usr/share/dhcpcd/hooks/10-wpa_supplicant /lib/dhcpcd/dhcpcd-hooks
		else
		    logtoboth "% Plugin $pfx: /lib/dhcpcd/dhcp-hooks/10-wpa_supplicant not found. WiFi will not work"
		fi
	    fi
	    ;;

	nm|network-manager)
	    logtoboth "> Plugin $pfx: Set network manager to NetworkManager"
	    ! ispkginstalled network-manager && doaptrpterror "install --no-install-recommends --yes network-manager" $showapt
	    systemctl -q enable NetworkManager > /dev/null 2>&1
	    systemctl -q disable dhcpcd > /dev/null 2>&1
	    if [ "$wifissid" != "" -a "$wifipassword" != "" -a "$wificountry" != "" ]
	    then
		logtoboth "> Plugin $pfx: Create NetworkManager WiFi configuration"
		logtoboth "  with SSID: $wifissid Password: $wifipassword WiFi Country: $wificountry"
		wificname=${wifissid,,}
		cat >> /etc/sdm/0piboot/060-nm-config.sh <<EOF
#!/bin/bash
nmcli c add type wifi con-name $wificname ifname wlan0 ssid $wifissid
nmcli c modify $wificname wifi-sec.key-mgmt wpa-psk wifi-sec.psk $wifipassword
EOF
		if [ -v noipv6 ]
		then
		    echo "nmcli c modify $wificname ipv6.method disabled" >> /etc/sdm/0piboot/060-nm-config.sh
		    echo "nmcli c modify Wired\ connection\ 1 ipv6.method disabled" >> /etc/sdm/0piboot/060-nm-config.sh
		fi
	    fi
	    for conf in nmconf nmconn
	    do
		if compgen -G "/etc/sdm/assets/${conf}-*" > /dev/null
		then
		    [ "$conf" == "nmconf" ] && tgt="conf.d" || tgt="system-connections"
		    for c in /etc/sdm/assets/${conf}-*
		    do
			cbn=$(basename $c)
			sbn=${cbn#${conf}-}
			logtoboth "> Plugin $pfx: Copy ${conf} '$sbn' from /etc/sdm/assets to /etc/NetworkManager/$tgt"
			cp $c /etc/NetworkManager/$tgt/$sbn
		    done
		fi
	    done
	    ;;
    esac
    # Don't think this is needed, but keeping jic
    #logtoboth "> Plugin $pfx: Update regulatory database"
    #update-alternatives --set regulatory.db /lib/firmware/regulatory.db-upstream
    #logfreespace "at end of $pfx Custom Phase post-install"
    logtoboth "* Plugin $pfx: Complete Phase post-install"
fi
