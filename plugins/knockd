#!/bin/bash
#
# This is an sdm plugin for: knockd
#
# The plugin is called three times: for Phase 0, Phase 1, and post-install.
#

function loadparams() {
    source $SDMPT/etc/sdm/sdm-readparams
}

# $1 is the phase: "0", "1", or "post-install"
# $2 is the argument list: arg1=val1|arg2=val2|arg3=val3| ...
#
# Main code for the Plugin
#
phase=$1
pfx="$(basename $0)"     #For messages
args="$2"
loadparams
vldargs="|config|localsrc|"

if [ "$phase" == "0" ]
then
    #
    # In Phase 0 all references to directories in the image must be preceded by $SDMPT
    #
    logtoboth "* Plugin $pfx: Start Phase 0"
    plugin_getargs $pfx "$args" "$vldargs" ""
    #
    # Print the keys found (example usage). plugin_getargs returns the list of found keys in $foundkeys
    #
    plugin_printkeys
    logtoboth "* Plugin $pfx: Complete Phase 0"
    #
    # Copy pktables and knockd.conf files
    #
    srcurl="https://raw.githubusercontent.com/gitbls/pktables/master"
    if [ "$config" != "" ]
    then
	logtoboth "> Plugin $pfx: Copy knockd config from $localsrc to /etc/sdm/assets"
	[ -f $config ] && cp -a $config $SDMPT/etc/sdm/assets/knockd.conf
	[ -f "$localsrc/pktables" ] && cp -a $localsrc/pktables $SDMPT/etc/sdm/assets
    fi
    if [ "$localsrc" != "" ]
    then
	#
	# Copy the appropriate files from local stash into the IMG
	#
	logtoboth "> Plugin $pfx: Copy pktables and knockd-helper from $localsrc to /etc/sdm/assets"
	[ -f "$localsrc/pktables" ] && cp -a $localsrc/pktables $SDMPT/etc/sdm/assets/pktables
	[ -f "$localsrc/knockd-helper" ] && cp -a $localsrc/knockd-helper $SDMPT/etc/sdm/assets
	[ -f "$localsrc/knockd.service" ] && cp -a $localsrc/knockd.service $SDMPT/etc/sdm/assets/knockd.service
	if [ "$config" == "" ]
	then
	    logtoboth "> Plugin $pfx: Copy knockd.conf from $localsrc to /etc/sdm/assets"
	    [ -f "$localsrc/knockd.conf" ] && cp -a $localsrc/knockd.conf $SDMPT/etc/sdm/assets
	fi
    else
	logtoboth "> Plugin $pfx: Download pktables from GitHub..."
	gsts=0
	for f in pktables knockd-helper knockd.service
	do
	    wget $srcurl/$f --output-document=$SDMPT/etc/sdm/assets/$f
	    [ $? -ne 0 ] && gsts=1
	done
	if [  $gsts -ne 0 ]
	then
	    logtoboth "? Plugin $pfx: Unable to download pktables from $srcurl"
	    exit
	fi
    fi
elif [ "$phase" == "1" ]
then
    #
    # Phase 1 (in nspawn)
    #
    logtoboth "* Plugin $pfx: Start Phase 1"
    plugin_getargs $pfx "$args" "$vldargs" ""
    #logfreespace "at start of Plugin $pfx Phase 1"
    #
    logtoboth "> Plugin $pfx: Install knockd and iptables"
    doaptrpterror "install knockd iptables --yes" $showapt
    #
    #logfreespace "at end of $pfx Phase 1"
    logtoboth "* Plugin $pfx: Complete Phase 1"
else
    #
    # Plugin Post-install edits
    #
    logtoboth "* Plugin $pfx: Start Phase post-install"
    plugin_getargs $pfx "$args" "$vldargs" ""
    #logfreespace "at start of Plugin $pfx Phase post-install"
    #
    [ -f /etc/sdm/assets/pktables ] && cp -a /etc/sdm/assets/pktables /usr/local/bin && setfileownmode /usr/local/bin/pktables 755
    [ -f /etc/sdm/assets/knockd-helper ] && cp -a /etc/sdm/assets/knockd-helper /usr/local/bin && setfileownmode /usr/local/bin/knockd-helper 755
    if [ -f /etc/sdm/assets/knockd.conf ]
    then
	[ -f /etc/knockd.conf ] && mv /etc/knockd.conf /etc/knockd.conf.sdm
	cp -a /etc/sdm/assets/knockd.conf /etc
	setfileownmode /etc/knockd.conf 644
    fi
    if [ -f /etc/sdm/assets/knockd.service ]
    then
	cp -a /etc/sdm/assets/knockd.service /etc/systemd/system
	setfileownmode /etc/systemd/system/knockd.service 644
	systemctl daemon-reload
    fi
    #
    #logfreespace "at end of $pfx Custom Phase post-install"
    logtoboth ""
    logtoboth "Plugin $pfx: *** knockd Configuration Notes ***"
    logtoboth "Plugin $pfx: * sudoedit /etc/knockd.conf and configure your port knocking"
    logtoboth "Plugin $pfx: * sudoedit /usr/local/bin/knockd-helper"
    logtoboth "Plugin $pfx:   and add 'pktables init' commands for each service in your knockd.conf "
    logtoboth "Plugin $pfx: * sudo systemctl enable knockd"
    logtoboth "Plugin $pfx: * Reboot"
    logtoboth "Plugin $pfx: * Check for errors: sudo journalctl -b"
    logtoboth "Plugin $pfx: * Make sure port forwards for ALL your knock sequences are set in your router"
    logtoboth ""
    logtoboth "Plugin $pfx: * pktables documentation: https://github.com/gitbls/pktables"
    logtoboth "Plugin $pfx: * knockd and knockd.conf documentation: man knockd"
    logtoboth "Plugin $pfx: "
    logtoboth "* Plugin $pfx: Complete Phase post-install"
fi
