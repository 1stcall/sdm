#!/bin/bash
#
# EZ Installer. Run from the bash command line:
#
#    curl -L https://raw.githubusercontent.com/gitbls/sdm/master/EZsdmInstaller | bash
#
# Installs into /usr/local/sdm by default
# If you specify a different directory (first argument), it assumes that sudo is not required
#
# At the moment requires apt-based package installs. Easy to fix, of course. It's only code...
#

function errexit() {
    echo "$1"
    exit 1
}

function askyn() {
    local ans
    echo -n "$1" '[y/n]? ' ; read $2 ans
    case "$ans" in
        y*|Y*) return 0 ;;
        *) return 1 ;;
    esac
}

function getosdistro() {
    local osdistro osversion
    if [ -f "/etc/os-release" ]
    then
        osdistro=$(grep ^ID= /etc/os-release | (IFS='='; read a b ; echo $b))
	osversion=$(grep ^VERSION_ID= /etc/os-release | (IFS='='; read a b ; echo $b))
	[ "$osversion" == "" ] && osversion=$(grep ^VERSION= /etc/os-release | (IFS='='; read a b ; echo $b))
    else
        osdistro="unknown"
	osversion="unknown"
    fi
    osdistro=${osdistro%\"} #Strip leading and trailing quotes
    osdistro=${osdistro#\"}
    osdistro=${osdistro,,}  #Lower case
    [ "$osdistro" == "raspbian" ] && osdistro="raspios"
    osversion=${osversion%\"}
    osversion=${osversion#\"}
    echo "$osdistro:$osversion"
}
#
# Check OS Distro and version
#
myscript="$0 $@"
#IFS=":" read osdistro osversion <<< $(getosdistro)
[ "$(which apt)" == "" ] && errexit "? apt not found; cannot install on this system"
#
# Create directories and download sdm
#
[ "$1" != "" ] && dir="$1" || dir="/usr/local/sdm"

[ "$SDMLAN" != "" ] && src=$SDMLAN || src="https://raw.githubusercontent.com/gitbls/sdm/master"
[ "$SDMLAN" != "" ] && curl="scp" || curl="curl"

[ "$dir" == "/usr/local/sdm" ] && sudo="sudo" || sudo=""

$sudo mkdir -p $dir $dir/1piboot

for f in sdm sdm-phase0 sdm-phase1 sdm-cparse \
	     sdm-firstboot sdm-apt-cacher sdm-apt \
	     sdm-customphase sdm-apps-example sdm-xapps-example \
	     sdm-cportal sdm-hotspot sdm-logmsg \
	     1piboot/1piboot.conf
do
    echo "Downloading '$f' to '$dir/$f'"
    if [ "$SDMLAN" == "" ]
    then
	$sudo curl --silent --show-error -L $src/$f -o $dir/$f
    else
	scp $SDMLAN/$f $dir/$f
    fi
done

$sudo chmod -R 755 $dir/*
$sudo chmod 644 $dir/{sdm-apps-example,sdm-xapps-example} $dir/1piboot/1piboot.conf

#
# If installed into the system (/usr/local/sdm) make sure that prerequisites installed
#
if [ "$dir" == "/usr/local/sdm" ]
then
    echo "* Ensure required packages are installed: systemd-container qemu-user-static binfmt-support"
    $sudo apt-get install --yes --no-install-recommends systemd-container qemu-user-static binfmt-support
    echo ""
    echo "% Invoke sdm with 'sudo $dir/sdm'"
    echo "  See the sdm documentation at https://github.com/gitbls/sdm"
else
    echo ""
    echo "You can inspect sdm in $1..."
    echo "To use sdm:"
    echo "  Rerun this script ($myscript) and install into /usr/local/sdm"
fi
