#!/bin/bash
#
# This script runs at first boot to perform desired configuration
#
# Processed at first boot: wifi-country, enable/disable service, custom scripts, and automatic reboot
#                          sdm --burn may write locale, keymap, and/or timezone into 1piboot.conf (NYI)
#                            if they are specified on the burn command line, so they will be processed as well
#                          ...plus a bunch of other infrequently used device settings
#

function bootlog() {
    # Write string in $1 to the system log/journal and /etc/sdm/history.log
    logger "FirstBoot $1"
    logit "" "> FirstBoot $1"
}

function doconfig() {
    cfgfile="$1"
    [ ! -f $cfgfile ] && bootlog "? Config file $cfgfile not found...skipping" && exit
    bootlog "Start Configuration with configuration file '$cfgfile'"
    IFS=":="
    while read rpifun value
    do
	if [[ ! $rpifun =~ ^\ *# && -n $rpifun ]] # skip comment and malformed lines
	then
	    value="${value%%\#*}"    # Del EOL comments
	    value="${value%"${value##*[^[:blank:]]}"}"  # Del trailing spaces/tabs
	    value="${value%\"}"     # Del opening double-quotes 
	    value="${value#\"}"     # Del closing double-quotes 
	    value="${value%\'}"     # Del opening single-quotes 
	    value="${value#\'}"     # Del closing single-quotes 
	    case "$rpifun" in
		# * do_resolution still needs to be sorted out
		serial)
		    bootlog "Set Serial Port to '$value'"
		    SUDO_USER=${myuser:-pi} raspi-config do_serial $value nonint
		    ;;
		service-enable)
		    bootlog "Enable Service '$value'"
		    systemctl enable $value
		    ;;
		service-disable)
		    bootlog "Disable Service '$value'"
		    systemctl disable $value
		    ;;
		boot_behavior|boot_behaviour)  # Allow US spelling as well ;)
		    bootlog "set boot_behaviour to '$value'"
		    SUDO_USER=${myuser:-pi} raspi-config do_boot_behaviour $value nonint
		    ;;
		audio|pi4video|boot_splash|boot_order|\
		    spi|i2c|boot_wait|net_names|overscan|blanking|\
		    pixdub|overclock|rgpio|camera|onewire)
		    # These are simple on/off and less commonly used so no elaborate logging for them
		    bootlog "Set $rpifun to '$value'"
		    SUDO_USER=${myuser:-pi} raspi-config do_$rpifun $value nonint
		    ;;
		#
		# fstab, keymap, locale, and timezone may be set via sdm --burn command
		#
		fstab)
		    bootlog "Append fstab extension '$value' to /etc/fstab"
		    cat /etc/sdm/assets/$value >> /etc/fstab
		    ;;
		keymap)
		    bootlog "Set Keymap to '$value' (!Ignore invoke-rc.d messages)"
		    SUDO_USER=${myuser:-pi} raspi-config do_configure_keyboard "$value" nonint
		    ;;
		locale)
		    bootlog "Set Locale to '$value'"
		    SUDO_USER=${myuser:-pi} raspi-config do_change_locale "$value" nonint
		    declare -x LANG="$value"
		    ;;
		timezone)
		    bootlog "Set Timezone to '$value'"
		    SUDO_USER=${myuser:-pi} raspi-config do_change_timezone "$value" nonint
		    ;;
		*)
		    bootlog "% Unrecognized option '$rpifun' in '$cfgfile'"
		    ;;
	    esac
	fi
    done < $cfgfile
    bootlog "Configuration with configuration file '$cfgfile' Completed"
}

source /usr/local/sdm/sdm-cparse ; readparams ""
doconfig /etc/sdm/1piboot.conf
#
# Set WiFi Country
#
if [ "$wificountry" != "" ]
then
    bootlog "Set WiFi Country to '$wificountry'"
    SUDO_USER=${myuser:-pi} raspi-config do_wifi_country "$wificountry" nonint
fi
#
# Final FirstBoot time processing: custom scripts and reboot
#
if [ "$bootscripts" -eq "1" ]
then
    for f in /usr/local/sdm/1piboot/0*-*.sh
    do
	if [ -x $f ]
	then
	    bootlog "Execute Custom FirstBoot Script '$f'"
	    bash $f
	else
	    bootlog "Custom FirstBoot Script '$f' does not have execute permission"
	fi
    done
else
    bootlog "Skip Custom FirstBoot Scripts"
fi

[ -f /etc/sdm/auto-1piboot.conf ] && doconfig /etc/sdm/auto-1piboot.conf

if [ $reboot -eq 1 ]
then
    [ -f /etc/sdm/run.firstboot ] && rm -f /etc/sdm/run.firstboot
    bootlog "System will reboot after system startup has completed"
    echo "$(thisdate) sdm FirstBoot system will restart after system startup completes" > /dev/console
    systemctl start sdm-firstboot-reboot &
    sleep 10 # Wait for the firstboot-reboot script to start
else
    rm -f /etc/systemd/system/sdm-firstboot-reboot.service        # Don't need it so clean it up
fi
bootlog "Configuration Complete"

