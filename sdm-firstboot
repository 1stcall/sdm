#!/bin/bash
#
# This script runs in nspawn or at first boot to perform desired configuration
# Arguments:
#        $1   config file [Default: /usr/local/sdm/thispi/1piboot/1piboot.conf]
#        $2   Omitted or 0: Running inside an nspawned image
#                        1: Running at first system boot
# Processed in nspawn:     locale, keymap, timezone
# Processed at first boot: hostname, wifi country, enable/disable service, and custom scripts
#

function dolog() {
    local fboot="$1" msg="$2"
    [ $fboot -eq 0 ] && echo "* FirstBoot $msg" || logger "FirstBoot $msg"
}

function doconfig() {
    cfgfile="$1"
    fboot=$2    # 0=in nspawn, 1=boot time
    [ ! -f $cfgfile ] && dolog "Config file $cfgfile not found...skipping" && exit
    dolog $fboot "Starting Configuration..."
    IFS=":="
    while read rpifun value
    do
	if [[ ! $rpifun =~ ^\ *# && -n $rpifun ]] # skip comment and malformed lines
	then
	    value="${value%%\#*}"    # Del EOL comments
	    value="${value%"${value##*[^[:blank:]]}"}"  # Del trailing spaces/tabs
	    value="${value%\"}"     # Del opening double-quotes 
	    value="${value#\"}"     # Del closing double-quotes 
	    value="${value%\'}"     # Del opening single-quotes 
	    value="${value#\'}"     # Del closing single-quotes 
	    if [ $fboot -eq 0 ]
	    then
		case "$rpifun" in
		    locale)
			dolog $fboot "Setting Locale to $value..."
			raspi-config do_change_locale "$value" nonint
			declare -x LANG="$LOCALE"
			/usr/local/sdm/sdm-logit "FirstBoot Set Locale to '$value'"
			;;
		    keymap)
			dolog $fboot "Setting Keyboard to $value..."
			dolog $fboot "Ignore invoke-rc.d messages..."
			raspi-config do_configure_keyboard "$value" nonint
			/usr/local/sdm/sdm-logit "FirstBoot Set Keymap to '$value'"
			;;
		    timezone)
			dolog $fboot "Setting Timezone to $value..."
			raspi-config do_change_timezone "$value" nonint
			/usr/local/sdm/sdm-logit "FirstBoot Set Timezone to '$value'"
			;;
		esac
	    else
		case "$rpifun" in
		    hostname)
			dolog $fboot "Setting Hostname to $value..."
			raspi-config do_hostname "$value" nonint
			hostnamectl set-hostname $value
			/usr/local/sdm/sdm-logit "FirstBoot Set Hostname to '$value'"
			;;
		    wifi-country)
			dolog $fboot "Setting WiFi country to $value..."
			raspi-config do_wifi_country "$value" nonint
			/usr/local/sdm/sdm-logit "FirstBoot Set WiFi Country to '$value'"
			;;
		    service-enable)
			dolog $fboot "Enabling Service $value"
			systemctl enable $value
			/usr/local/sdm/sdm-logit "FirstBoot Enable Service '$value'"
			;;
		    service-disable)
			dolog $fboot "Disabling Service $value"
			systemctl disable $value
			/usr/local/sdm/sdm-logit "FirstBoot Disable Service '$value'"
			;;
		    custom-scripts)
			if [ "$value" == "True" ]
			then
			    for f in /usr/local/sdm/thispi/1piboot/0*-*.sh
			    do
				if [ -x $f ]
				then
				    dolog $fboot "Executing custom FirstBoot script $f"
				    /usr/local/sdm/sdm-logit "Executing custom FirstBoot script '$f'"
				    sh $f
				else
				    dolog $fboot "custom FirstBoot script '$f' does not have execute permission"
				    /usr/local/sdm/sdm-logit "custom FirstBoot script '$f' does not have execute permission"
				fi
			    done
			else
			    dolog $fboot "Skipping custom FirstBoot scripts"
			    /usr/local/sdm/sdm-logit "Skipping custom FirstBoot scripts"
			fi
			;;
		esac
	    fi
	fi
    done < $cfgfile
}

[ "$1" != "" ] && conf0="$1" || conf0="/usr/local/sdm/thispi/1piboot/1piboot.conf"
[ "$2" == "" ] && boot0=0 || boot0=1        #Default is inside the nspawned image

doconfig $conf0 $boot0
