#!/bin/bash
#
# This script runs in nspawn or at first boot to perform desired configuration
# Arguments:
#        $1   config file [Default: /usr/local/sdm/thispi/1piboot/1piboot.conf]
#        $2   Omitted or 0: Running inside an nspawned image
#                        1: Running at first system boot
# Processed in nspawn:     locale, keymap, timezone
# Processed at first boot: hostname, wifi country, enable/disable service, and custom scripts
#

function dolog() {
    [ $fboot -eq 1 ] && logger "FirstBoot $1"
}

function doconfig() {
    cfgfile="$1"
    fboot=$2    # 0=in nspawn, 1=boot time
    source /usr/local/sdm/sdm-cparse ; readparams ""
    [ ! -f $cfgfile ] && dolog "Config file $cfgfile not found...skipping"
    [ ! -f $cfgfile ] && logtoboth "" "? FirstBoot Config file '$cfgfile' not found...skipping" && exit
    dolog "Start Configuration"
    logtoboth "" "* FirstBoot Start Configuration"
    IFS=":="
    while read rpifun value
    do
	if [[ ! $rpifun =~ ^\ *# && -n $rpifun ]] # skip comment and malformed lines
	then
	    value="${value%%\#*}"    # Del EOL comments
	    value="${value%"${value##*[^[:blank:]]}"}"  # Del trailing spaces/tabs
	    value="${value%\"}"     # Del opening double-quotes 
	    value="${value#\"}"     # Del closing double-quotes 
	    value="${value%\'}"     # Del opening single-quotes 
	    value="${value#\'}"     # Del closing single-quotes 
	    if [ $fboot -eq 0 ]
	    then
		#
		# These are done in Phase 1 of the nspawn
		#
		case "$rpifun" in
		    locale)
			logtoboth "" "> FirstBoot Set Locale to '$value'"
			raspi-config do_change_locale "$value" nonint
			declare -x LANG="$LOCALE"
			;;
		    keymap)
			logtoboth "" "> FirstBoot Set Keymap to '$value'"
			logtoboth "" ">!Ignore invoke-rc.d messages"
			raspi-config do_configure_keyboard "$value" nonint
			;;
		    timezone)
			logtoboth "" "> FirstBoot Set Timezone to '$value'"
			raspi-config do_change_timezone "$value" nonint
			;;
		esac
	    else
		#
		# These are done at first boot
		#
		case "$rpifun" in
		    hostname)
			dolog "Set Hostname to $value..."
			logit "" "> FirstBoot Set Hostname to '$value'"
			raspi-config do_hostname "$value" nonint
			hostnamectl set-hostname $value
			# Toggle network links so dns/dhcp and mdns know our new name
			# Restart avahi-daemon so it knows the new name as well
			systemctl stop dhcpcd
			sleep 5
			systemctl start dhcpcd
			systemctl restart avahi-daemon
			;;
		    wifi-country)
			dolog "Set WiFi country to $value..."
			logit "" "> FirstBoot Set WiFi Country to '$value'"
			raspi-config do_wifi_country "$value" nonint
			;;
		    service-enable)
			dolog "Enable Service $value"
			logit "" "> FirstBoot Enable Service '$value'"
			systemctl enable $value
			;;
		    service-disable)
			dolog "Disable Service $value"
			logit "" "> FirstBoot Disable Service '$value'"
			systemctl disable $value
			;;
		    custom-scripts)
			if [ "${value,,}" == "true" ]
			then
			    for f in /usr/local/sdm/thispi/1piboot/0*-*.sh
			    do
				if [ -x $f ]
				then
				    dolog "Execute Custom FirstBoot Script '$f'"
				    logit "" "> Execute Custom FirstBoot Script '$f'"
				    sh $f
				else
				    dolog "Custom FirstBoot Script '$f' does not have execute permission"
				    logit "" "? Custom FirstBoot Script '$f' does not have execute permission"
				fi
			    done
			else
			    dolog "> Skipping custom FirstBoot scripts"
			    logit "" "Skipping custom FirstBoot scripts"
			fi
			;;
		esac
	    fi
	fi
    done < $cfgfile
}

[ "$1" != "" ] && conf0="$1" || conf0="/usr/local/sdm/thispi/1piboot/1piboot.conf"
[ "$2" == "" ] && boot0=0 || boot0=1        #Default is inside the nspawned image (0)

doconfig $conf0 $boot0
