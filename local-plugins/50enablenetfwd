#!/usr/bin/env bash
#
set -e
#
function pluginHelp(){
    # tabs in heredoc added with vscode keybinding ctrl+k [tab]
    cat <<-EOF 1>&2
		I: plugin: '${pfx}' phase: '${phase:-help}'
		W: *** THIS IS STRICTLY A WORK IN PROGRESS WITH VALUES HARD CODED.  USE WITH CAUTION. ***

		This is an sdm plugin for: ${pfx}.  This enables net.ipv4.ip_forward and net.ipv6.conf.all.forwarding in sysctl.conf.

		The plugin is called three times: for Phase 0 (Mounted environment), Phase 1 (in nspawn), and Phase 2 (post-install).
		'\$1' is the phase: "0", "1", or "post-install"
		'\$2' is the argument list: arg1=val1|arg2=val2|arg3=val3| ...

		Valid arguments to this plugin are:-
		    assetDir    -   Directory where local assets such as common.sh are stored.
		    DEBUG       -   Debug level for debug messages and breakpoints.
		    LOGPREFIX   -   Prefix for debug log messages

		W: *** THIS IS STRICTLY A WORK IN PROGRESS WITH VALUES HARD CODED.  USE WITH CAUTION. ***

	EOF
}
#
# Main code for the Plugin
#
phase=${1}
pfx="$(basename "$0")"     #For messages
args="$2"
#
# Check that phase is set to check if we are running within sdm.  If not set 
# or set to help, then display help text & exit.
#
[[ ! "0 1 post-install" =~ (^| )${phase}($| ) ]] && pluginHelp && exit 0
#
# shellcheck source=../sdm-readparams
source "$SDMPT"/etc/sdm/sdm-readparams
plugin_getargs "$pfx" "$args" "|assetDir|DEBUG|LOGPREFIX|"
#
if ! [ -f "$SDMPT"/etc/sdm/local-assets/common.sh ] 
then 
    cp -av "${assetDir:-}"/common.sh "$SDMPT"/etc/sdm/local-assets/common.sh
fi
#
# shellcheck source=../assets/common.sh
source "$SDMPT"/etc/sdm/local-assets/common.sh
fDebugLog 2 "* Plugin $pfx: Sucessfully sourced $SDMPT/etc/sdm/local-assets/common.sh " wait
#
if [[ "$phase" == "0" ]]
then
    #
    # In Phase 0 all references to directories in the image must be preceded by $SDMPT
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase 0 (Mounted environment)"
    fDebugLog 3 "$(plugin_printkeys)"
    #
    fDebugLog 2 "* Plugin $pfx: Enabling net forward."
    ${cpCmd:-} "$SDMPT"/etc/sysctl.conf "$SDMPT"/etc/sysctl.conf.orig  
    # shellcheck disable=SC2002  
    cat "$SDMPT"/etc/sysctl.conf | \
        sed 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' | \
        sed 's/#net.ipv6.conf.all.forwarding=1/net.ipv6.conf.all.forwarding=1/g' \
        | "${teeCmd:-}" "$SDMPT"/etc/sysctl.conf
    #
    fDebugLog 1 "* Plugin $pfx: Complete Phase 0 (Mounted environment)" wait
    #
elif [[ "$phase" == "1" ]]
then
    #
    # Phase 1 (in nspawn)
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase 1 (in nspawn)"
    fDebugLog 3 "$(plugin_printkeys)"
    #
#    fDebugLog 2 "* Plugin $pfx: Enabling net forward."
#    #
#    $cpCmd "$SDMPT"/etc/sysctl.conf "$SDMPT"/etc/sysctl.conf.orig
#    #
#    # shellcheck disable=SC2002  
#    cat "$SDMPT"/etc/sysctl.conf \
#        | sed 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' \
#        | sed 's/#net.ipv6.conf.all.forwarding=1/net.ipv6.conf.all.forwarding=1/g' \
#        | $teeCmd "$SDMPT"/etc/sysctl.conf
#    #
    fDebugLog 2 "> Plugin $pfx: Installing & enabling iptables-persistent"
    doaptrpterror "install --no-install-recommends -y iptables-persistent" "${showapt:-}"
    
    fDebugLog 1 "* Plugin $pfx: Complete Phase 1 (in nspawn)"
    #
else
    #
    # Plugin Post-install edits
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase post-install"
    fDebugLog 3 "$(plugin_printkeys)"
    #
    fDebugLog 2 "> Plugin $pfx: Configuring iptable rules."
    $cpCmd "$SDMPT"/etc/sdm/local-assets/rules.v{4,6} "$SDMPT"/etc/iptables/
    #
    fDebugLog 1 "* Plugin $pfx: Complete Phase post-install"
    #
fi
