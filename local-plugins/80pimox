#!/usr/bin/env bash
#
set -e
#
function pluginHelp(){
    # tabs in heredoc added with vscode keybinding ctrl+k [tab]
    cat <<-EOF 1>&2
		I: plugin: '${pfx}' phase: '${phase:-help}'
		W: *** THIS IS STRICTLY A WORK IN PROGRESS WITH VALUES HARD CODED.  USE WITH CAUTION. ***

		This is an sdm plugin for: ${pfx}.  This is a plugin to install Proxmox V7 for the Raspberry Pi.
		It will add the gpg key and repository from github.com/pimox/pimox7.

		The plugin is called three times: for Phase 0 (Mounted environment), Phase 1 (in nspawn), and Phase 2 (post-install).
		'\$1' is the phase: "0", "1", or "post-install"
		'\$2' is the argument list: arg1=val1|arg2=val2|arg3=val3| ...4

		Valid arguments to this plugin are:-
		    assetDir    -   Directory where local assets such as common.sh are stored.
		    DEBUG       -   Debug level for debug messages and breakpoints.
		    LOGPREFIX   -   Prefix for debug log messages

		Example:    --plugin ${pfx}:assetDir=/home/username/my-sdm-assets|DEBUG=1|LOGPREFIX=cutomise-script.sh"

		W: *** THIS IS STRICTLY A WORK IN PROGRESS WITH VALUES HARD CODED.  USE WITH CAUTION. ***

	EOF
}
#
# Main code for the Plugin
#
phase=${1:-help}
pfx="$(basename "$0")"     #For messages
args="$2"
#
# Check that phase is set to check if we are running within sdm.  If not set 
# or set to help, then display help text & exit.
#
[[ ! "0 1 post-install" =~ (^| )${phase}($| ) ]] && pluginHelp && exit 0
#
# shellcheck source=../sdm-readparams
source "$SDMPT"/etc/sdm/sdm-readparams
#DEBUG=${custom1:-0} && LOGPREFIX=${custom2:-"${pfx}"}
plugin_getargs "$pfx" "$args" "|assetDir|DEBUG|LOGPREFIX|"
#
copiedCommon=0
if ! [ -f "$SDMPT"/etc/sdm/local-assets/common.sh ] 
then
    copiedCommon=1
    cp -av "${assetDir:-}"/common.sh "$SDMPT"/etc/sdm/local-assets/common.sh && copiedCommon=3
fi
#
# shellcheck source=../assets/common.sh
source "$SDMPT"/etc/sdm/local-assets/common.sh
fDebugLog 2 "* Plugin $pfx: Sucessfully sourced $SDMPT/etc/sdm/local-assets/common.sh copiedCommon=${copiedCommon}" yesno
#
if [[ "$phase" == "0" ]]
then
    #
    # In Phase 0 (Mounted environment) all references to directories in the image must be preceded by $SDMPT
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase 0 (Mounted environment)"
    fDebugLog 3 "$(plugin_printkeys)"
    #
    fDebugLog 2 "Plugin $pfx: Setting up pimox repository"
    #### ADD SOURCE PIMOX7 + KEY & add repository
    printf "# PiMox7 Development Repo
    deb https://raw.githubusercontent.com/pimox/pimox7/master/ dev/ \n" | tee "$SDMPT"/etc/apt/sources.list.d/pimox.list

    fDebugLog 2 "Plugin $pfx: Running curl to get gpg key for pimox repository" 
    curl https://raw.githubusercontent.com/pimox/pimox7/master/KEY.gpg | gpg --dearmo | tee "$SDMPT"/etc/apt/trusted.gpg.d/pimox.gpg
    #
    fDebugLog 2 "Plugin $pfx: Configuring $SDMPT/boot/cmdline.txt"
    if [ "$(grep cgroup "$SDMPT"/boot/cmdline.txt)" != "" ]
    then
        fDebugLog 2 "Plugin $pfx: Seems to be already configured!"
    else
        sed -i "1 s|$| cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1|" "$SDMPT"/boot/cmdline.txt
    fi
    fDebugLog 1 "* Plugin $pfx: Complete Phase 0 (Mounted environment)" yesno
    #
elif [[ "$phase" == "1" ]]
then
    #
    # Phase 1 (in nspawn)
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase 1 (in nspawn)"
    fDebugLog 3 "$(plugin_printkeys)"
    #
#    $SDMPT/etc/sdm/local-assets/RPiOS64-IA-Install.sh
#    curl https://raw.githubusercontent.com/pimox/pimox7/master/KEY.gpg |  apt-key add -
    fDebugLog 3 "Plugin $pfx: updating apt" yesno
#    doaptrpterror "update" "${showapt}"
    fDebugLog 3 "Plugin $pfx: installing pve-manager" yesno
    doaptrpterror "remove --purge --assume-yes linux-headers-*" "${showapt:-}"
    doaptrpterror "install --assume-yes --no-install-recommends -o Dpkg::Options::="--force-confdef" pve-manager" "$showapt"
    fDebugLog 3 "Plugin $pfx: installing proxmox-ve" yesno
    doaptrpterror "install  -y proxmox-ve" "${showapt}"
    #
    #### CONFIGURE PIMOX7 BANNER #############################################################################################################
    ${cpCmd:-} "${SDMPT}"/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js "${SDMPT}"/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js.auto.backup
    SEARCH="return Ext.String.format('"
    #### PLACE HOLDER BANNER BEGIN --> #### LINE 1 ####                                                     #### LINEBREAK #### -- #### LINE 2 #####
    REPLACE="return Ext.String.format(' This is a unofficial development build of PVE7 - PIMOX7 - https://github.com/1stcall/pimox7  Build to run a PVE7 on the RPi4. ! ! ! NO GUARANTEE NOT OFFICIALLY SUPPORTED ! ! ! ');"
    sed -i "s|$SEARCH.*|$REPLACE|" "${SDMPT}"/usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
    #
    #logfreespace "at end of $pfx Phase 1 (in nspawn)"
    fDebugLog 1 "* Plugin $pfx: Complete Phase 1 (in nspawn)" yesno
    #
else
    #
    # Plugin Phase 2 (post-install) edits
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase Phase 2 (post-install)"
    fDebugLog 3 "* Plugin $pfx: Nothing to do"
    fDebugLog 1 "* Plugin $pfx: Complete Phase Phase 2 (post-install)"
fi
