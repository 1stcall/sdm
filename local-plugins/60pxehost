#!/usr/bin/env bash
#
function pluginHelp(){
    # tabs in heredoc added in vscode with keybinding ctrl+k [tab]
    cat <<-EOF 1>&2
		I: 'phase: ${phase:-help}'
		W: *** THIS IS STRICTLY A WORK IN PROGRESS WITH VALUES HARD CODED.  USE WITH CAUTION. ***

		This is an sdm plugin for: ${pfx}.  This plugin configures my server to act as a netboot/pxe host.

		The plugin is called three times: for Phase 0 (Mounted environment), Phase 1 (in nspawn), and Phase 2 (post-install).
		'\$1' is the phase: "0", "1", or "post-install"	
		'\$2' is the argument list: arg1=val1|arg2=val2|arg3=val3| ...

		Valid arguments to this plugin are:-
		    assetDir    -   Directory where local assets such as common.sh are stored.
		    netIface    -   Network interface to configure.
		    ipAddr      -   IP address to assign to the supplied netIface.
		    dnsaddr     -   DNS server to configue on DHCP clients.
		    brdAddr     -   Network broadcast address for the network being configured.
		    gwAddr      -   Network gateway address for the network being configured.
		    dhcpRange   -   The range of addresses, netmask & lease time for the DHCP server to assign.
		                    This should be in the form of a comma (,) seperated list.  
		                    ** You need to escape the commas (\,). **
		    tftpRootDir -   The root of the TFTP server that provides the /boot files.
		    nfsRootDir  -   The root of the NFS server that provides the /root files.
            DEBUG       -   Debug level for debug messages and breakpoints.
            LOGPREFIX   -   Prefix for debug log messages

		W: *** THIS IS STRICTLY A WORK IN PROGRESS WITH VALUES HARD CODED.  USE WITH CAUTION. ***
	EOF
}
#
# Main code for the Plugin
#
phase=${1}
pfx="$(basename "$0")"     #For messages
args="$2"
#
# Check that phase is set to check if we are running within sdm.  If not set 
# or is set to help, then display help text & exit.
#
[[ ! "0 1 post-install" =~ (^| )${phase}($| ) ]] && pluginHelp && exit 0
#
# shellcheck source=/dev/null
source "$SDMPT"/etc/sdm/sdm-readparams
plugin_getargs "$pfx" "$args" "|assetDir|DEBUG|LOGPREFIX|netIface|ipAddr|dnsaddr|brdAddr|gwAddr|dhcpRange|tftpRootDir|nfsRootDir|"
#
if ! [ -f "$SDMPT"/etc/sdm/local-assets/common.sh ] 
then 
    ${cpCmd:-} "${assetDir:-}"/common.sh "$SDMPT"/etc/sdm/local-assets/common.sh
fi
#
# shellcheck source=/dev/null
source "$SDMPT"/etc/sdm/local-assets/common.sh
fDebugLog 2 "* Plugin $pfx: Sucessfully sourced $SDMPT/etc/sdm/local-assets/common.sh " wait
#
if [[ "$phase" == "0" ]]
then
    #
    # In Phase 0 all references to directories in the image must be preceded by $SDMPT
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase 0 (Mounted environment)"
    fDebugLog 3 "$(plugin_printkeys)"
    #
    fDebugLog 1 "* Plugin $pfx: Updating fstab from ${assetDir}/my-fstab"
    ${teeCmd:-} -a "$SDMPT"/etc/fstab < "${assetDir}"/my-fstab
    #
    fDebugLog 2 "* Plugin $pfx: Creating directory dnsmasq.service.d/" 
    ${mkdirCmd:-} "$SDMPT"/etc/systemd/system/dnsmasq.service.d/

    fDebugLog 2 "* Plugin $pfx: Creating directory nfs-blkmap.service.d/" 
    $mkdirCmd "$SDMPT"/etc/systemd/system/nfs-blkmap.service.d/

    fDebugLog 2 "* Plugin $pfx: Copying $assetDir/dnsmasq-override.conf > $SDMPT/etc/systemd/system/dnsmasq.service.d/override.conf"
    $cpCmd "$assetDir"/dnsmasq-override.conf "$SDMPT"/etc/systemd/system/dnsmasq.service.d/override.conf
    #
    fDebugLog 2 "* Plugin $pfx: Copying $assetDir/nfs-blkmap-override.conf > $SDMPT/etc/systemd/system/nfs-blkmap.service.d/override.conf"
    $cpCmd "$assetDir"/nfs-blkmap-override.conf "$SDMPT"/etc/systemd/system/nfs-blkmap.service.d/override.conf
    #
    fDebugLog 1 "* Plugin $pfx: Complete Phase 0 (Mounted environment)" wait
    #
elif [[ "$phase" == "1" ]]
then
    #
    # Phase 1 (in nspawn)
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase 1 (in nspawn)"
    fDebugLog 3 "$(plugin_printkeys)"
    #
    fDebugLog 3 "$(logfreespace "at start of Plugin $pfx Phase 1 (in nspawn)")"
    
    fDebugLog 2 "> Plugin $pfx: Install dnsmasq, nfs-kernel-server & systemd-resolved"
    doaptrpterror "install --no-install-recommends -y dnsmasq nfs-kernel-server" "${showapt:-}"
    #
    fDebugLog 3 "$(logfreespace "at end of $pfx Phase 1 (in nspawn)")"
    #
    fDebugLog 1 "* Plugin $pfx: Complete Phase 1 (in nspawn)" wait
    #
else
    #
    # Plugin Post-install edits
    #
    fDebugLog 1 "* Plugin $pfx: Start Phase post-install"
    #
    fDebugLog 2 "> Plugin $pfx: blocking interface ${netIface:-} from dhcpcd" 
    echo "denyinterfaces pattern ${netIface}" | "$teeCmd" -a "$SDMPT"/etc/dhcpcd.conf
    #
    fDebugLog 2 "> Plugin $pfx: Configuring dnsmasq"
    $cpCmd -av "$SDMPT"/etc/sdm/local-assets/dnsmasq.* "$SDMPT"/etc/
    #
    fDebugLog 2 "> Plugin $pfx: Configuring systemd-networkd"
    #
    cat <<-EOF | "$teeCmd" "$SDMPT"/etc/systemd/network/11-"${netIface}".network
		[Match]
		Name=${netIface}

		[Network]
		Address=${ipAddr:-}
		#DNS=${dnsaddr:-}

		#[Route]
		#Gateway=${gwAddr:-}
	EOF
    #
    fDebugLog 1 "* Plugin $pfx: Complete Phase post-install" wait
    #
fi
